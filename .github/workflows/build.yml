on:
  push:
    branches:
      - '**'
    tags-ignore:
      - v*

env:
  ECR_REPO: elotl/buildscaler
  DOCKERHUB_REPO: elotl/buildscaler-dev
name: Build and test
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16.x
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - run: git fetch origin +refs/tags/*:refs/tags/*
      - uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build binary
        run: make buildscaler
      - name: Test
        run: make test
      - name: Set VERSION
        id: set_version
        run: echo ::set-output name=VERSION::$(git describe --dirty --tags)
      - name: Log into Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image
        run: make push-img VERSION=${{ steps.set_version.outputs.VERSION }}
      - uses: helm/kind-action@v1.2.0
        name: Create k8s Kind Cluster
        with:
          cluster_name: 'buildscaler-smoke-test'

      - name: Smoke test
        run: |
          BUILDSCALER_IMAGE=$DOCKERHUB_REPO:${{ steps.set_version.outputs.VERSION }} envsubst < deploy/buildkite-deployment.yaml.template > deploy/bk-deploy.yaml
          cat deploy/bk-deploy.yaml
          kubectl create namespace external-metrics
          kubectl create secret docker-registry --namespace=external-metrics regcred --docker-server=https://index.docker.io/v1/ --docker-username=$DOCKER_USERNAME --docker-password=$DOCKER_PASSWORD --docker-email=dev@elotl.co
          kubectl create secret generic --namespace=external-metrics buildkite-secrets --from-literal=BUILDKITE_AGENT_TOKEN=$BUILDKITE_AGENT_TOKEN
          kubectl get secret -n external-metrics buildkite-secrets -o yaml
          kubectl apply -f deploy/rbac.yaml
          kubectl apply -f deploy/rbac-kube-system.yaml
          kubectl patch serviceaccount -n external-metrics buildscaler-apiserver -p '{"imagePullSecrets": [{"name": "regcred"}]}'
          kubectl apply -f deploy/bk-deploy.yaml
          kubectl apply -f deploy/service.yaml
          kubectl apply -f deploy/apiservice.yaml
          kubectl describe -n external-metrics deploy/buildscaler-apiserver
          kubectl wait -n external-metrics pod -l app=buildscaler-apiserver --for=condition=ready --timeout=90s
          kubectl describe svc -n external-metrics buildscaler-apiserver
          kubectl get pods -n external-metrics
          kubectl wait --for=condition=ready pod -n external-metrics -l app=buildscaler-apiserver --timeout=180s
          kubectl logs -n external-metrics deploy/buildscaler-apiserver
          sleep 10
          kubectl api-resources
          kubectl get --raw="/apis/external.metrics.k8s.io/v1beta1/" -A |  grep "buildkite_total"
          METRICS_COUNT=$(kubectl get --raw="/apis/external.metrics.k8s.io/v1beta1/" -A | jq -r ".resources[].name" | grep "buildkite_" -c)
          if [ $METRICS_COUNT = "12" ]; then
            echo "Smoke test passed.\n"
            exit 0;
          else
            kubectl describe -n external-metrics deploy/buildscaler-apiserver
            echo "Smoke test failed.\n"
            echo "Metrics count: " $METRICS_COUNT
            exit 1;
          fi
        env:
          BUILDKITE_AGENT_TOKEN: ${{ secrets.BUILDKITE_AGENT_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
